// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`react ts styled components Snapshots react-ts-styled-components: complex make-usage nested mt-if 1`] = `
Object {
  "react-ts-styled-components": "import React from \\"react\\";
import Alert from \\"@govtnz/ds/build/react-ts-styled-components/Alert\\";
import H2 from \\"@govtnz/ds/build/react-ts-styled-components/H2\\";
import P from \\"@govtnz/ds/build/react-ts-styled-components/P\\";
import Ul from \\"@govtnz/ds/build/react-ts-styled-components/Ul\\";

export default () => (
  <React.Fragment>
    <Alert mode=\\"live\\" level=\\"info\\" headingId=\\"heading1\\">
      <H2 id=\\"heading1\\">Info: You are alive</H2>
      <P>Some text describing what's going on 1.</P>
    </Alert>
    <Alert level=\\"warning\\" headingId=\\"heading2\\">
      <H2 id=\\"heading2\\">Warning: You are alive</H2>
      <P>Some text describing what's going on 2.</P>
    </Alert>
    <Alert level=\\"success\\" headingId=\\"heading3\\">
      <H2 id=\\"heading3\\">Success: You are alive</H2>
      <P>Some text describing what's going on 3.</P>
    </Alert>
    <Alert level=\\"error\\" headingId=\\"heading4\\">
      <H2 id=\\"heading4\\">Error: You are alive</H2>
      <Ul bulleted>
        <li>
          <a href=\\"#\\">Error in this field 4</a>
        </li>
      </Ul>
    </Alert>
  </React.Fragment>
);
",
}
`;

exports[`react ts styled components Snapshots react-ts-styled-components: multiple <mt-if> key comparison 1`] = `
Array [
  Object {
    "files": Object {
      "react-ts-styled-components/children.tsx": "import React from \\"react\\";

type Props = {
  errorId?: boolean;
  selectId?: string;
  label?: React.ReactNode;
  error: boolean;
  name: string;
  multiple?: boolean;
  onChange?: React.SelectHTMLAttributes<HTMLSelectElement>[\\"onChange\\"];
  ref?: React.RefObject<HTMLSelectElement>;
};

const Children = ({
  errorId,
  selectId,
  label,
  error,
  name,
  multiple,
  onChange,
  ref
}: Props) => (
  <React.Fragment>
    <div errorId={errorId} />
    <label htmlFor={selectId}>
      {label !== undefined ? (
        label
      ) : (
        <React.Fragment>Example label text</React.Fragment>
      )}
    </label>
    <select
      error={error}
      id={selectId}
      name={name}
      multiple={multiple}
      onChange={onChange}
      ref={ref}
    >
      Options
    </select>
  </React.Fragment>
);

export default Children;
",
    },
    "formatId": "react-ts-styled-components",
  },
]
`;

exports[`react ts styled components Snapshots react-ts-styled-components: with it 1`] = `
Array [
  Object {
    "files": Object {
      "react-ts-styled-components/children.tsx": "import React from \\"react\\";

type Props = {
  errorId?: boolean;
  selectId?: string;
  label?: React.ReactNode;
  error: boolean;
  name: string;
  multiple?: boolean;
  onChange?: React.SelectHTMLAttributes<HTMLSelectElement>[\\"onChange\\"];
  ref?: React.RefObject<HTMLSelectElement>;
};

const Children = ({
  errorId,
  selectId,
  label,
  error,
  name,
  multiple,
  onChange,
  ref
}: Props) => (
  <React.Fragment>
    <div errorId={errorId} />
    <label htmlFor={selectId}>
      {label !== undefined ? (
        label
      ) : (
        <React.Fragment>Example label text</React.Fragment>
      )}
    </label>
    <select
      error={error}
      id={selectId}
      name={name}
      multiple={multiple}
      onChange={onChange}
      ref={ref}
    >
      Options
    </select>
  </React.Fragment>
);

export default Children;
",
    },
    "formatId": "react-ts-styled-components",
  },
]
`;
